[project]
name = "test-case-generator-backend"
version = "0.1.0"
description = "AI-powered test case generation system backend"
requires-python = ">=3.11"
dependencies = [
    "fastapi==0.115.0",
    "uvicorn[standard]==0.30.0",
    "pydantic==2.9.0",
    "pydantic-settings==2.5.0",
    "langgraph==0.2.0",
    "langchain==0.3.0",
    "langchain-core==0.3.0",
    "ollama==0.3.0",
    "chromadb==0.4.24",
    "redis==5.0.0",
    "PyGithub==2.4.0",
    "httpx==0.27.0",
    "python-multipart==0.0.9",
    "python-dotenv==1.0.0",
    "structlog==24.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest==8.3.0",
    "pytest-asyncio==0.24.0",
    "pytest-cov==5.0.0",
    "ruff==0.6.0",
    "mypy==1.11.0",
    "httpx==0.27.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**" = ["ARG"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
addopts = "--cov=src --cov-report=html --cov-report=term-missing --cov-fail-under=80"

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
