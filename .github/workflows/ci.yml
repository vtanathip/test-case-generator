name: CI

on:
    push:
        branches: [main, develop, "001-*"]
    pull_request:
        branches: [main, develop]

jobs:
    backend-lint:
        name: Backend Linting
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Python 3.11
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Install uv
              run: curl -LsSf https://astral.sh/uv/install.sh | sh

            - name: Add uv to PATH
              run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH

            - name: Install dependencies
              working-directory: ./backend
              run: |
                  uv venv
                  uv pip install -e ".[dev]"

            - name: Run ruff
              working-directory: ./backend
              run: |
                  source .venv/bin/activate
                  ruff check .

            - name: Run mypy
              working-directory: ./backend
              run: |
                  source .venv/bin/activate
                  mypy src/ || true  # Allow failure for now

    backend-test:
        name: Backend Tests
        runs-on: ubuntu-latest
        services:
            redis:
                image: redis:7-alpine
                ports:
                    - 6379:6379
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python 3.11
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Install uv
              run: curl -LsSf https://astral.sh/uv/install.sh | sh

            - name: Add uv to PATH
              run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH

            - name: Install dependencies
              working-directory: ./backend
              run: |
                  uv venv
                  uv pip install -e ".[dev]"

            - name: Run tests
              working-directory: ./backend
              run: |
                  source .venv/bin/activate
                  pytest --cov=src --cov-report=xml --cov-report=term
              env:
                  REDIS_HOST: localhost
                  GITHUB_TOKEN: fake_token_for_testing
                  GITHUB_WEBHOOK_SECRET: fake_secret
                  GITHUB_REPO: test/repo

            - name: Upload coverage
              uses: codecov/codecov-action@v4
              with:
                  file: ./backend/coverage.xml
                  flags: backend
                  fail_ci_if_error: false

    frontend-lint:
        name: Frontend Linting
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Install dependencies
              working-directory: ./frontend
              run: npm install

            - name: Run linter
              working-directory: ./frontend
              run: npm run lint

    frontend-test:
        name: Frontend Tests
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Install dependencies
              working-directory: ./frontend
              run: npm install

            - name: Run tests
              working-directory: ./frontend
              run: npm run test:coverage || true # Allow failure until tests exist

            - name: Upload coverage
              uses: codecov/codecov-action@v4
              with:
                  directory: ./frontend/coverage
                  flags: frontend
                  fail_ci_if_error: false

    docker-build:
        name: Docker Build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Build backend image
              run: docker build -f docker/Dockerfile.backend -t test-case-generator-backend:test .

            - name: Build frontend image
              run: docker build -f docker/Dockerfile.frontend -t test-case-generator-frontend:test .
